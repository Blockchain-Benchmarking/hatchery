#!/bin/bash

set -e

output="$1" ; shift      # Path of the file where to print the image id
region="$1" ; shift      # AWS region where to look for the image id

for src in "$@" ; do
    source "${src}"
done

test "x${type_image_ids}" != 'x'     # Image id for each possible instance type
test "x${secgroup_id}" != 'x' # Security group id for the profile in the region
test "x${ssh_key}" != 'x'       # Ssh key to access AWS instances once launched
test "x${ssh_user}" != 'x'     # Ssh user to access AWS instances once launched

if [ "x${disk}" != 'x' ] ; then
    echo "${disk}" | grep -Pq '^\d+$'             # Disk must be a number of GB
    block="[{\"DeviceName\":\"/dev/sda1\",\"Ebs\":{\"VolumeSize\":${disk}}}]"
fi


workdir="$(mktemp -d --suffix='.d' "${0##*/}.XXXXXX")"
trap "rm -rf '${workdir}'" EXIT


for type_image_id in "${type_image_ids[@]}" ; do
    vmtype="${type_image_id%% *}"
    image_id="${type_image_id##* }"

    printf "${vmtype} ${image_id} " > "${workdir}/id"

    if [ "x${block}" != 'x' ] ; then
	blockopt="--block-device-mappings=${block}"
    fi

    if aws ec2 run-instances \
         --region="${region}" \
	 --image-id="${image_id}" \
	 ${blockopt} \
	 --security-group-ids="${secgroup_id}" \
	 --instance-type="${vmtype}" \
	 --key-name="${ssh_key}" \
	 --query='Instances[*].InstanceId' \
	 --output='text' >> "${workdir}/id" 2>> "${workdir}/err"
    then
	mv "${workdir}/id" "${workdir}/out"
	break
    fi
done


if [ ! -e "${workdir}/out" ] ; then
    cat "${workdir}/err" >&2
    exit 1
fi

read vmtype image_id instance_id < "${workdir}/out"

(
    echo "type='${vmtype}'"
    echo "image_id='${image_id}'"
    echo "secgroup_id='${secgroup_id}'"
    echo "ssh_key='${ssh_key}'"
    echo "ssh_user='${ssh_user}'"
    if [ "x${disk}" != 'x' ] ; then
	echo "disk='${disk}'"
    fi
    echo "region='${region}'"
    echo "instance_id='${instance_id}'"
    echo "egg='${output}'"
) > "${output}"
